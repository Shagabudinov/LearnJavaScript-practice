// Напишите функцию sumTo(n), которая вычисляет сумму чисел 1 + 2 + ... + n.

// Например:

// sumTo(1) = 1
// sumTo(2) = 2 + 1 = 3
// sumTo(3) = 3 + 2 + 1 = 6
// sumTo(4) = 4 + 3 + 2 + 1 = 10
// ...
// sumTo(100) = 100 + 99 + ... + 2 + 1 = 5050
// Сделайте три варианта решения:

// С использованием цикла.
// Через рекурсию, т.к. sumTo(n) = n + sumTo(n-1) for n > 1.
// С использованием формулы арифметической прогрессии.
// Пример работы вашей функции:

const sumTo = (n) => {
    let sum = 0;
    for (let i = 1; i <= n; i++) {
        sum += i;
    }
    return sum;
};

const sumToRec = (n) => (n === 1) ? 1 : n + sumToRec(n - 1)

const sumToFormula = (n) => {
    return ((n * (n - 1)) / 2) + n
}

console.log(sumTo(10500)); // 5050
console.log(sumToRec(10500)); // 5050
console.log(sumToFormula(10500)); // 5050
// P.S. Какой вариант решения самый быстрый? Самый медленный? Почему?
// Самый быстрый - формулой, самый медленный рекурсией

// P.P.S. Можно ли при помощи рекурсии посчитать sumTo(100000)? нет!
